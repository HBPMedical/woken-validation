akka {

  loglevel = WARNING
  loglevel = ${?LOG_LEVEL}
  stdout-loglevel = WARNING
  stdout-loglevel = ${?LOG_LEVEL}

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-config-on-start = off
  log-config-on-start = ${?LOG_CONFIG}

  log-dead-letters = 10
  log-dead-letters-during-shutdown = off

  actor {
    provider = "cluster"
  }

  extensions += "akka.cluster.pubsub.DistributedPubSub"
  extensions += "akka.cluster.client.ClusterClientReceptionist"

  remote {
    log-sent-messages = off
    log-received-messages = off
    log-remote-lifecycle-events = off

    watch-failure-detector {
      acceptable-heartbeat-pause = 20 s
    }

    netty.tcp {
      hostname = ${clustering.ip} # external (logical) hostname
      port = ${clustering.port}   # external (logical) port

      bind-hostname = 0.0.0.0         # internal (bind) hostname
      bind-port = ${clustering.port}  # internal (bind) port
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]

    roles = ["validation", "scoring"]

  }

  http {
    server {
      idle-timeout = 300s
      request-timeout = 180s
      ssl-encryption = off
      ssl-tracing = on
    }
  }
}

clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 8082
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?WOKEN_PORT_8088_TCP_ADDR}
  seed-port = 8088
  seed-port = ${?WOKEN_PORT_8088_TCP_PORT}
  cluster.name = "woken"
  cluster.name = ${?CLUSTER_NAME}
}

validation.resizer {
  enabled = on
  # The fewest number of routees the router should ever have.
  lower-bound = 1
  # The most number of routees the router should ever have.
  # Must be greater than or equal to lower-bound.
  upper-bound = 10
  action-interval = 5s
  downsize-after-underutilized-for = 72h
}

scoring.resizer {
  enabled = on
  lower-bound = 1
  # The most number of routees the router should ever have.
  # Must be greater than or equal to lower-bound.
  upper-bound = 10
  action-interval = 5s
  downsize-after-underutilized-for = 72h
}

http {
  networkInterface = "0.0.0.0"
  networkInterface = ${?HTTP_LISTEN_INTERFACE}
  port = 8081
  port = ${?HTTP_PORT}
}
